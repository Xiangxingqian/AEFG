public class cz.romario.opensudoku.game.command.EditCellNoteCommand extends cz.romario.opensudoku.game.command.AbstractCellCommand
{
    private int mCellColumn;
    private int mCellRow;
    private cz.romario.opensudoku.game.CellNote mNote;
    private cz.romario.opensudoku.game.CellNote mOldNote;

    void <init>()
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void <init>()>();
        return;
    }

    public void <init>(cz.romario.opensudoku.game.Cell, cz.romario.opensudoku.game.CellNote)
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellNote $r2;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 := @parameter1: cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void <init>()>();
        $i0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellRow> = $i0;
        $i0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getColumnIndex()>();
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellColumn> = $i0;
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mNote> = $r2;
        return;
    }

    void execute()
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;
        int $i0, $i1;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        $r2 = virtualinvoke $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellCollection getCells()>();
        $i0 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellRow>;
        $i1 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellColumn>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i0, $i1);
        $r3 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote getNote()>();
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mOldNote> = $r3;
        $r3 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mNote>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setNote(cz.romario.opensudoku.game.CellNote)>($r3);
        return;
    }

    void restoreState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        int $i0;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        $r1 := @parameter0: android.os.Bundle;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void restoreState(android.os.Bundle)>($r1);
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("cellRow");
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellRow> = $i0;
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("cellColumn");
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellColumn> = $i0;
        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("note");
        $r3 = staticinvoke <cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote deserialize(java.lang.String)>($r2);
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mNote> = $r3;
        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("oldNote");
        $r3 = staticinvoke <cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote deserialize(java.lang.String)>($r2);
        $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mOldNote> = $r3;
        return;
    }

    void saveState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        int $i0;
        cz.romario.opensudoku.game.CellNote $r4;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        $r1 := @parameter0: android.os.Bundle;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void saveState(android.os.Bundle)>($r1);
        $i0 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellRow>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cellRow", $i0);
        $i0 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellColumn>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cellColumn", $i0);
        $r4 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mNote>;
        $r2 = virtualinvoke $r4.<cz.romario.opensudoku.game.CellNote: java.lang.String serialize()>();
        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("note", $r2);
        $r4 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mOldNote>;
        $r2 = virtualinvoke $r4.<cz.romario.opensudoku.game.CellNote: java.lang.String serialize()>();
        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("oldNote", $r2);
        return;
    }

    void undo()
    {
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;
        int $i0, $i1;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @this: cz.romario.opensudoku.game.command.EditCellNoteCommand;
        $r2 = virtualinvoke $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellCollection getCells()>();
        $i0 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellRow>;
        $i1 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: int mCellColumn>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i0, $i1);
        $r3 = $r0.<cz.romario.opensudoku.game.command.EditCellNoteCommand: cz.romario.opensudoku.game.CellNote mOldNote>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setNote(cz.romario.opensudoku.game.CellNote)>($r3);
        return;
    }
}
