public class cz.romario.opensudoku.game.command.SetCellValueCommand extends cz.romario.opensudoku.game.command.AbstractCellCommand
{
    private int mCellColumn;
    private int mCellRow;
    private int mOldValue;
    private int mValue;

    void <init>()
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void <init>()>();
        return;
    }

    public void <init>(cz.romario.opensudoku.game.Cell, int)
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        int $i0, $i1;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter1: int;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void <init>()>();
        $i1 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellRow> = $i1;
        $i1 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getColumnIndex()>();
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellColumn> = $i1;
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mValue> = $i0;
        return;
    }

    void execute()
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;
        int $i0, $i1;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        $r2 = virtualinvoke $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: cz.romario.opensudoku.game.CellCollection getCells()>();
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellRow>;
        $i1 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellColumn>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i0, $i1);
        $i1 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getValue()>();
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mOldValue> = $i1;
        $i1 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mValue>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValue(int)>($i1);
        return;
    }

    void restoreState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;
        android.os.Bundle $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        $r1 := @parameter0: android.os.Bundle;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void restoreState(android.os.Bundle)>($r1);
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("cellRow");
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellRow> = $i0;
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("cellColumn");
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellColumn> = $i0;
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("value");
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mValue> = $i0;
        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("oldValue");
        $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mOldValue> = $i0;
        return;
    }

    void saveState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;
        android.os.Bundle $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        $r1 := @parameter0: android.os.Bundle;
        specialinvoke $r0.<cz.romario.opensudoku.game.command.AbstractCellCommand: void saveState(android.os.Bundle)>($r1);
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellRow>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cellRow", $i0);
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellColumn>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("cellColumn", $i0);
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mValue>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("value", $i0);
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mOldValue>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("oldValue", $i0);
        return;
    }

    void undo()
    {
        cz.romario.opensudoku.game.command.SetCellValueCommand $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;
        int $i0, $i1;

        $r0 := @this: cz.romario.opensudoku.game.command.SetCellValueCommand;
        $r2 = virtualinvoke $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: cz.romario.opensudoku.game.CellCollection getCells()>();
        $i0 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellRow>;
        $i1 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mCellColumn>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i0, $i1);
        $i1 = $r0.<cz.romario.opensudoku.game.command.SetCellValueCommand: int mOldValue>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValue(int)>($i1);
        return;
    }
}
