public class android.support.v4.database.DatabaseUtilsCompat extends java.lang.Object
{

    private void <init>()
    {
        android.support.v4.database.DatabaseUtilsCompat $r0;

        $r0 := @this: android.support.v4.database.DatabaseUtilsCompat;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String[] appendSelectionArgs(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] $r0, $r1, $r2;
        int $i0, $i2;

        $r0 := @parameter0: java.lang.String[];
        $r1 := @parameter1: java.lang.String[];
        if $r0 == null goto label0;

        $i0 = lengthof $r0;
        if $i0 != 0 goto label1;

     label0:
        return $r1;

     label1:
        $i2 = lengthof $r0;
        $i0 = lengthof $r1;
        $i2 = $i2 + $i0;
        $r2 = newarray (java.lang.String)[$i2];
        $i2 = lengthof $r0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 0, $i2);
        $i2 = lengthof $r0;
        $i0 = lengthof $r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i2, $i0);
        return $r2;
    }

    public static java.lang.String concatenateWhere(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;
        $r1 := @parameter1: java.lang.String;
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);
        if $z0 == 0 goto label0;

        return $r1;

     label0:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") AND (");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }
}
