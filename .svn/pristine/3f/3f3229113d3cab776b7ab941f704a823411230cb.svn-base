public abstract class cz.romario.opensudoku.game.command.AbstractCommand extends java.lang.Object
{
    private boolean mIsCheckpoint;

    public void <init>()
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static cz.romario.opensudoku.game.command.AbstractCommand newInstance(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.Object[] $r5;
        cz.romario.opensudoku.game.command.ClearAllNotesCommand r6;
        cz.romario.opensudoku.game.command.EditCellNoteCommand r7;
        cz.romario.opensudoku.game.command.FillInNotesCommand r8;
        cz.romario.opensudoku.game.command.SetCellValueCommand r9;
        java.lang.IllegalArgumentException r10;

        $r0 := @parameter0: java.lang.String;
        $r1 = class "cz/romario/opensudoku/game/command/ClearAllNotesCommand";
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        r6 = new cz.romario.opensudoku.game.command.ClearAllNotesCommand;
        specialinvoke r6.<cz.romario.opensudoku.game.command.ClearAllNotesCommand: void <init>()>();
        return r6;

     label0:
        $r1 = class "cz/romario/opensudoku/game/command/EditCellNoteCommand";
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label1;

        r7 = new cz.romario.opensudoku.game.command.EditCellNoteCommand;
        specialinvoke r7.<cz.romario.opensudoku.game.command.EditCellNoteCommand: void <init>()>();
        return r7;

     label1:
        $r1 = class "cz/romario/opensudoku/game/command/FillInNotesCommand";
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label2;

        r8 = new cz.romario.opensudoku.game.command.FillInNotesCommand;
        specialinvoke r8.<cz.romario.opensudoku.game.command.FillInNotesCommand: void <init>()>();
        return r8;

     label2:
        $r1 = class "cz/romario/opensudoku/game/command/SetCellValueCommand";
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label3;

        r9 = new cz.romario.opensudoku.game.command.SetCellValueCommand;
        specialinvoke r9.<cz.romario.opensudoku.game.command.SetCellValueCommand: void <init>()>();
        return r9;

     label3:
        r10 = new java.lang.IllegalArgumentException;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = $r0;
        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown command class \'%s\'.", $r5);
        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);
        throw r10;
    }

    abstract void execute();

    public java.lang.String getCommandClass()
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        return $r2;
    }

    public boolean isCheckpoint()
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        $z0 = $r0.<cz.romario.opensudoku.game.command.AbstractCommand: boolean mIsCheckpoint>;
        return $z0;
    }

    void restoreState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;
        android.os.Bundle $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        $r1 := @parameter0: android.os.Bundle;
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("isCheckpoint");
        $r0.<cz.romario.opensudoku.game.command.AbstractCommand: boolean mIsCheckpoint> = $z0;
        return;
    }

    void saveState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;
        android.os.Bundle $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        $r1 := @parameter0: android.os.Bundle;
        $z0 = $r0.<cz.romario.opensudoku.game.command.AbstractCommand: boolean mIsCheckpoint>;
        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isCheckpoint", $z0);
        return;
    }

    public void setCheckpoint(boolean)
    {
        cz.romario.opensudoku.game.command.AbstractCommand $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.command.AbstractCommand;
        $z0 := @parameter0: boolean;
        $r0.<cz.romario.opensudoku.game.command.AbstractCommand: boolean mIsCheckpoint> = $z0;
        return;
    }

    abstract void undo();
}
