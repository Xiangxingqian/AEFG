public class cz.romario.opensudoku.game.SudokuGame extends java.lang.Object
{
    public static final int GAME_STATE_COMPLETED;
    public static final int GAME_STATE_NOT_STARTED;
    public static final int GAME_STATE_PLAYING;
    private long mActiveFromTime;
    private cz.romario.opensudoku.game.CellCollection mCells;
    private cz.romario.opensudoku.game.command.CommandStack mCommandStack;
    private long mCreated;
    private long mId;
    private long mLastPlayed;
    private java.lang.String mNote;
    private cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener mOnPuzzleSolvedListener;
    private int mState;
    private long mTime;

    public void <init>()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime> = -1L;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime> = 0L;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mLastPlayed> = 0L;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mCreated> = 0L;
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = 1;
        return;
    }

    public static cz.romario.opensudoku.game.SudokuGame createEmptyGame()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        long $l0;

        $r0 = new cz.romario.opensudoku.game.SudokuGame;
        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void <init>()>();
        $r1 = staticinvoke <cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.CellCollection createEmpty()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void setCells(cz.romario.opensudoku.game.CellCollection)>($r1);
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void setCreated(long)>($l0);
        return $r0;
    }

    private void executeCommand(cz.romario.opensudoku.game.command.AbstractCommand)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.AbstractCommand $r1;
        cz.romario.opensudoku.game.command.CommandStack $r2;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: cz.romario.opensudoku.game.command.AbstractCommand;
        $r2 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r2.<cz.romario.opensudoku.game.command.CommandStack: void execute(cz.romario.opensudoku.game.command.AbstractCommand)>($r1);
        return;
    }

    private void finish()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void pause()>();
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = 2;
        return;
    }

    public void clearAllNotes()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.ClearAllNotesCommand $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = new cz.romario.opensudoku.game.command.ClearAllNotesCommand;
        specialinvoke $r1.<cz.romario.opensudoku.game.command.ClearAllNotesCommand: void <init>()>();
        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void executeCommand(cz.romario.opensudoku.game.command.AbstractCommand)>($r1);
        return;
    }

    public void fillInNotes()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.FillInNotesCommand $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = new cz.romario.opensudoku.game.command.FillInNotesCommand;
        specialinvoke $r1.<cz.romario.opensudoku.game.command.FillInNotesCommand: void <init>()>();
        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void executeCommand(cz.romario.opensudoku.game.command.AbstractCommand)>($r1);
        return;
    }

    public cz.romario.opensudoku.game.CellCollection getCells()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.CellCollection $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        return $r1;
    }

    public long getCreated()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mCreated>;
        return $l0;
    }

    public long getId()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mId>;
        return $l0;
    }

    public long getLastPlayed()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mLastPlayed>;
        return $l0;
    }

    public java.lang.String getNote()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        java.lang.String $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: java.lang.String mNote>;
        return $r1;
    }

    public int getState()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $i0 = $r0.<cz.romario.opensudoku.game.SudokuGame: int mState>;
        return $i0;
    }

    public long getTime()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0, $l1;
        byte $b2;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime>;
        $b2 = $l0 cmp -1L;
        if $b2 == 0 goto label0;

        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime>;
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();
        $l1 = $l0 + $l1;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime>;
        $l1 = $l1 - $l0;
        return $l1;

     label0:
        $l1 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime>;
        return $l1;
    }

    public boolean hasSomethingToUndo()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.CommandStack $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.command.CommandStack: boolean hasSomethingToUndo()>();
        return $z0;
    }

    public boolean hasUndoCheckpoint()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.CommandStack $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.command.CommandStack: boolean hasCheckpoint()>();
        return $z0;
    }

    public boolean isCompleted()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: boolean isCompleted()>();
        return $z0;
    }

    public void pause()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0, $l1, $l2;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime>;
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();
        $l2 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime>;
        $l2 = $l1 - $l2;
        $l2 = $l0 + $l2;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime> = $l2;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime> = -1L;
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void setLastPlayed(long)>($l2);
        return;
    }

    public void reset()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        int $i0, $i1;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;
        boolean $z0;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $i1 = 0;

     label0:
        if $i1 < 9 goto label1;

        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void validate()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void setTime(long)>(0L);
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void setLastPlayed(long)>(0L);
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = 1;
        return;

     label1:
        $i0 = 0;

     label2:
        if $i0 < 9 goto label3;

        $i1 = $i1 + 1;
        goto label0;

     label3:
        $r2 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i1, $i0);
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z0 == 0 goto label4;

        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValue(int)>(0);
        $r3 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r3.<cz.romario.opensudoku.game.CellNote: void <init>()>();
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setNote(cz.romario.opensudoku.game.CellNote)>($r3);

     label4:
        $i0 = $i0 + 1;
        goto label2;
    }

    public void restoreState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        cz.romario.opensudoku.game.CellCollection $r3;
        long $l0;
        int $i1;
        cz.romario.opensudoku.game.command.CommandStack $r4;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: android.os.Bundle;
        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("id");
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mId> = $l0;
        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("note");
        $r0.<cz.romario.opensudoku.game.SudokuGame: java.lang.String mNote> = $r2;
        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("created");
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mCreated> = $l0;
        $i1 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("state");
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = $i1;
        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("time");
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime> = $l0;
        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("lastPlayed");
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mLastPlayed> = $l0;
        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("cells");
        $r3 = staticinvoke <cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.CellCollection deserialize(java.lang.String)>($r2);
        $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells> = $r3;
        $r4 = new cz.romario.opensudoku.game.command.CommandStack;
        $r3 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        specialinvoke $r4.<cz.romario.opensudoku.game.command.CommandStack: void <init>(cz.romario.opensudoku.game.CellCollection)>($r3);
        $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack> = $r4;
        $r4 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r4.<cz.romario.opensudoku.game.command.CommandStack: void restoreState(android.os.Bundle)>($r1);
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void validate()>();
        return;
    }

    public void resume()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mActiveFromTime> = $l0;
        return;
    }

    public void saveState(android.os.Bundle)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r3;
        long $l0;
        int $i1;
        cz.romario.opensudoku.game.CellCollection $r4;
        cz.romario.opensudoku.game.command.CommandStack $r5;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: android.os.Bundle;
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mId>;
        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("id", $l0);
        $r3 = $r0.<cz.romario.opensudoku.game.SudokuGame: java.lang.String mNote>;
        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("note", $r3);
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mCreated>;
        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("created", $l0);
        $i1 = $r0.<cz.romario.opensudoku.game.SudokuGame: int mState>;
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("state", $i1);
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime>;
        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("time", $l0);
        $l0 = $r0.<cz.romario.opensudoku.game.SudokuGame: long mLastPlayed>;
        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("lastPlayed", $l0);
        $r4 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        $r2 = virtualinvoke $r4.<cz.romario.opensudoku.game.CellCollection: java.lang.String serialize()>();
        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("cells", $r2);
        $r5 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r5.<cz.romario.opensudoku.game.command.CommandStack: void saveState(android.os.Bundle)>($r1);
        return;
    }

    public void setCellNote(cz.romario.opensudoku.game.Cell, cz.romario.opensudoku.game.CellNote)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellNote $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        cz.romario.opensudoku.game.command.EditCellNoteCommand $r5;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 := @parameter1: cz.romario.opensudoku.game.CellNote;
        if $r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cell cannot be null.");
        throw $r3;

     label0:
        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Note cannot be null.");
        throw $r3;

     label1:
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z0 == 0 goto label2;

        $r5 = new cz.romario.opensudoku.game.command.EditCellNoteCommand;
        specialinvoke $r5.<cz.romario.opensudoku.game.command.EditCellNoteCommand: void <init>(cz.romario.opensudoku.game.Cell,cz.romario.opensudoku.game.CellNote)>($r1, $r2);
        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void executeCommand(cz.romario.opensudoku.game.command.AbstractCommand)>($r5);

     label2:
        return;
    }

    public void setCellValue(cz.romario.opensudoku.game.Cell, int)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.Cell $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        cz.romario.opensudoku.game.command.SetCellValueCommand $r4;
        cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener $r5;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter1: int;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cell cannot be null.");
        throw $r2;

     label0:
        if $i0 < 0 goto label1;

        if $i0 <= 9 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be between 0-9.");
        throw $r2;

     label2:
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z0 == 0 goto label3;

        $r4 = new cz.romario.opensudoku.game.command.SetCellValueCommand;
        specialinvoke $r4.<cz.romario.opensudoku.game.command.SetCellValueCommand: void <init>(cz.romario.opensudoku.game.Cell,int)>($r1, $i0);
        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void executeCommand(cz.romario.opensudoku.game.command.AbstractCommand)>($r4);
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void validate()>();
        $z0 = virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: boolean isCompleted()>();
        if $z0 == 0 goto label3;

        specialinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void finish()>();
        $r5 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener mOnPuzzleSolvedListener>;
        if $r5 == null goto label3;

        $r5 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener mOnPuzzleSolvedListener>;
        interfaceinvoke $r5.<cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener: void onPuzzleSolved()>();

     label3:
        return;
    }

    public void setCells(cz.romario.opensudoku.game.CellCollection)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        cz.romario.opensudoku.game.command.CommandStack $r2;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: cz.romario.opensudoku.game.CellCollection;
        $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells> = $r1;
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void validate()>();
        $r2 = new cz.romario.opensudoku.game.command.CommandStack;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        specialinvoke $r2.<cz.romario.opensudoku.game.command.CommandStack: void <init>(cz.romario.opensudoku.game.CellCollection)>($r1);
        $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack> = $r2;
        return;
    }

    public void setCreated(long)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 := @parameter0: long;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mCreated> = $l0;
        return;
    }

    public void setId(long)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 := @parameter0: long;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mId> = $l0;
        return;
    }

    public void setLastPlayed(long)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 := @parameter0: long;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mLastPlayed> = $l0;
        return;
    }

    public void setNote(java.lang.String)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        java.lang.String $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: java.lang.String;
        $r0.<cz.romario.opensudoku.game.SudokuGame: java.lang.String mNote> = $r1;
        return;
    }

    public void setOnPuzzleSolvedListener(cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 := @parameter0: cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener;
        $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.SudokuGame$OnPuzzleSolvedListener mOnPuzzleSolvedListener> = $r1;
        return;
    }

    public void setState(int)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $i0 := @parameter0: int;
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = $i0;
        return;
    }

    public void setTime(long)
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $l0 := @parameter0: long;
        $r0.<cz.romario.opensudoku.game.SudokuGame: long mTime> = $l0;
        return;
    }

    public void setUndoCheckpoint()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.CommandStack $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.command.CommandStack: void setCheckpoint()>();
        return;
    }

    public void start()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r0.<cz.romario.opensudoku.game.SudokuGame: int mState> = 0;
        virtualinvoke $r0.<cz.romario.opensudoku.game.SudokuGame: void resume()>();
        return;
    }

    public void undo()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.CommandStack $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.command.CommandStack: void undo()>();
        return;
    }

    public void undoToCheckpoint()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.command.CommandStack $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.command.CommandStack mCommandStack>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.command.CommandStack: void undoToCheckpoint()>();
        return;
    }

    public void validate()
    {
        cz.romario.opensudoku.game.SudokuGame $r0;
        cz.romario.opensudoku.game.CellCollection $r1;

        $r0 := @this: cz.romario.opensudoku.game.SudokuGame;
        $r1 = $r0.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection mCells>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: boolean validate()>();
        return;
    }
}
