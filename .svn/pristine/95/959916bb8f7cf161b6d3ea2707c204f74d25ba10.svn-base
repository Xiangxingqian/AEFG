public class cz.romario.opensudoku.gui.importing.OpenSudokuImportTask extends cz.romario.opensudoku.gui.importing.AbstractImportTask
{
    private android.net.Uri mUri;

    public void <init>(android.net.Uri)
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        android.net.Uri $r1;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r1 := @parameter0: android.net.Uri;
        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.AbstractImportTask: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri> = $r1;
        return;
    }

    private void importV1(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();
        $r2 = "";

     label0:
        if $i0 != 1 goto label1;

        return;

     label1:
        if $i0 != 2 goto label3;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("game");
        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "data");
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importGame(java.lang.String)>($r3);

     label2:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();
        goto label0;

     label3:
        if $i0 != 3 goto label4;

        $r2 = "";
        goto label2;

     label4:
        if $i0 != 4 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("name");
        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importFolder(java.lang.String)>($r3);
        goto label2;
    }

    private void importV2(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        long $l0;
        int $i1;
        cz.romario.opensudoku.db.SudokuImportParams $r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();
        $r3 = "";
        $r2 = new cz.romario.opensudoku.db.SudokuImportParams;
        specialinvoke $r2.<cz.romario.opensudoku.db.SudokuImportParams: void <init>()>();

     label0:
        if $i1 != 1 goto label1;

        return;

     label1:
        if $i1 != 2 goto label4;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("folder");
        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "created");
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l0 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, $l0);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importFolder(java.lang.String,long)>($r4, $l0);

     label2:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();
        goto label0;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("game");
        if $z0 == 0 goto label2;

        virtualinvoke $r2.<cz.romario.opensudoku.db.SudokuImportParams: void clear()>();
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "created");
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l0 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, $l0);
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long created> = $l0;
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "state");
        $l0 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, 1L);
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long state> = $l0;
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "time");
        $l0 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, 0L);
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long time> = $l0;
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "last_played");
        $l0 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, 0L);
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long lastPlayed> = $l0;
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "data");
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data> = $r5;
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "note");
        $r2.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String note> = $r5;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importGame(cz.romario.opensudoku.db.SudokuImportParams)>($r2);
        goto label2;

     label4:
        if $i1 != 3 goto label5;

        $r3 = "";
        goto label2;

     label5:
        if $i1 != 4 goto label2;

        virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("name");
        goto label2;
    }

    private void importXml(java.io.Reader) throws cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        java.io.Reader $r1;
        org.xmlpull.v1.XmlPullParserException $r2;
        int $i0;
        org.xmlpull.v1.XmlPullParserFactory $r3;
        java.io.BufferedReader $r4;
        java.lang.String $r5, $r7;
        org.xmlpull.v1.XmlPullParser $r6;
        boolean $z0;
        java.lang.RuntimeException $r8;
        java.io.IOException $r9;
        android.content.Context $r10;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r1 := @parameter0: java.io.Reader;
        $r4 = new java.io.BufferedReader;
        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label0:
        $r3 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();
        virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(0);
        $r6 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();
        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r4);
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if $i0 != 1 goto label3;

     label2:
        return;

     label3:
        if $i0 != 2 goto label4;

        $r5 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("opensudoku");
        if $z0 == 0 goto label11;

        $r5 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");
        if $r5 != null goto label5;

        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importV1(org.xmlpull.v1.XmlPullParser)>($r6);

     label4:
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();
        goto label1;

     label5:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("2");
        if $z0 == 0 goto label8;

        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importV2(org.xmlpull.v1.XmlPullParser)>($r6);

     label6:
        goto label4;

     label7:
        $r2 := @caughtexception;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);
        throw $r8;

     label8:
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void setError(java.lang.String)>("Unknown version of data.");

     label9:
        goto label4;

     label10:
        $r9 := @caughtexception;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);
        throw $r8;

     label11:
        $r10 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.content.Context mContext>;

     label12:
        $r7 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>(2131296352);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void setError(java.lang.String)>($r7);

     label13:
        goto label2;

        catch org.xmlpull.v1.XmlPullParserException from label0 to label6 with label7;
        catch java.io.IOException from label0 to label6 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label8 to label9 with label7;
        catch java.io.IOException from label8 to label9 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label7;
        catch java.io.IOException from label12 to label13 with label10;
    }

    private long parseLong(java.lang.String, long)
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        java.lang.String $r1;
        long $l0;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r1 := @parameter0: java.lang.String;
        $l0 := @parameter1: long;
        if $r1 == null goto label0;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label0:
        return $l0;
    }

    protected void processImport() throws cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        android.content.ContentResolver $r1;
        java.net.MalformedURLException $r2;
        java.net.URI $r3;
        java.io.InputStreamReader $r4;
        android.net.Uri $r5;
        java.lang.String $r6, $r7, $r10;
        boolean $z0;
        android.content.Context $r8;
        java.io.InputStream $r9;
        java.net.URL $r11;
        java.lang.Throwable $r12;
        java.lang.RuntimeException $r13;
        java.io.IOException $r14;
        java.net.URISyntaxException $r15;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;
        $r5 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

     label0:
        $r7 = virtualinvoke $r5.<android.net.Uri: java.lang.String getScheme()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("content");
        if $z0 == 0 goto label3;

        $r8 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.content.Context mContext>;
        $r1 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $r4 = new java.io.InputStreamReader;
        $r5 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;
        $r9 = virtualinvoke $r1.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r5);
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

     label1:
        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importXml(java.io.Reader)>($r4);

     label2:
        virtualinvoke $r4.<java.io.InputStreamReader: void close()>();
        return;

     label3:
        $r3 = new java.net.URI;
        $r5 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;
        $r7 = virtualinvoke $r5.<android.net.Uri: java.lang.String getScheme()>();
        $r5 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;
        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();
        $r5 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;
        $r10 = virtualinvoke $r5.<android.net.Uri: java.lang.String getFragment()>();
        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r6, $r10);
        $r4 = new java.io.InputStreamReader;
        $r11 = virtualinvoke $r3.<java.net.URI: java.net.URL toURL()>();
        $r9 = virtualinvoke $r11.<java.net.URL: java.io.InputStream openStream()>();
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);
        goto label1;

     label4:
        $r12 := @caughtexception;
        virtualinvoke $r4.<java.io.InputStreamReader: void close()>();
        throw $r12;

     label5:
        $r2 := @caughtexception;
        $r13 = new java.lang.RuntimeException;
        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);
        throw $r13;

     label6:
        $r14 := @caughtexception;
        $r13 = new java.lang.RuntimeException;
        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);
        throw $r13;

     label7:
        $r15 := @caughtexception;
        $r13 = new java.lang.RuntimeException;
        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);
        throw $r13;

        catch java.net.MalformedURLException from label0 to label1 with label5;
        catch java.io.IOException from label0 to label1 with label6;
        catch java.net.URISyntaxException from label0 to label1 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.net.MalformedURLException from label2 to label5 with label5;
        catch java.io.IOException from label2 to label5 with label6;
        catch java.net.URISyntaxException from label2 to label5 with label7;
    }
}
