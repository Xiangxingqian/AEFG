public class cz.romario.opensudoku.game.Cell extends java.lang.Object
{
    private cz.romario.opensudoku.game.CellCollection mCellCollection;
    private final java.lang.Object mCellCollectionLock;
    private cz.romario.opensudoku.game.CellGroup mColumn;
    private int mColumnIndex;
    private boolean mEditable;
    private cz.romario.opensudoku.game.CellNote mNote;
    private cz.romario.opensudoku.game.CellGroup mRow;
    private int mRowIndex;
    private cz.romario.opensudoku.game.CellGroup mSector;
    private boolean mValid;
    private int mValue;

    public void <init>()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellNote $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r1.<cz.romario.opensudoku.game.CellNote: void <init>()>();
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void <init>(int,cz.romario.opensudoku.game.CellNote,boolean,boolean)>(0, $r1, 1, 1);
        return;
    }

    public void <init>(int)
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;
        cz.romario.opensudoku.game.CellNote $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter0: int;
        $r1 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r1.<cz.romario.opensudoku.game.CellNote: void <init>()>();
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void <init>(int,cz.romario.opensudoku.game.CellNote,boolean,boolean)>($i0, $r1, 1, 1);
        return;
    }

    private void <init>(int, cz.romario.opensudoku.game.CellNote, boolean, boolean)
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;
        cz.romario.opensudoku.game.CellNote $r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter0: int;
        $r1 := @parameter1: cz.romario.opensudoku.game.CellNote;
        $z0 := @parameter2: boolean;
        $z1 := @parameter3: boolean;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        $r0.<cz.romario.opensudoku.game.Cell: java.lang.Object mCellCollectionLock> = $r2;
        $r0.<cz.romario.opensudoku.game.Cell: int mRowIndex> = -1;
        $r0.<cz.romario.opensudoku.game.Cell: int mColumnIndex> = -1;
        if $i0 < 0 goto label0;

        if $i0 <= 9 goto label1;

     label0:
        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be between 0-9.");
        throw $r3;

     label1:
        $r0.<cz.romario.opensudoku.game.Cell: int mValue> = $i0;
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote> = $r1;
        $r0.<cz.romario.opensudoku.game.Cell: boolean mEditable> = $z0;
        $r0.<cz.romario.opensudoku.game.Cell: boolean mValid> = $z1;
        return;
    }

    public static cz.romario.opensudoku.game.Cell deserialize(java.lang.String)
    {
        java.lang.String $r0;
        java.util.StringTokenizer $r1;
        cz.romario.opensudoku.game.Cell $r3;

        $r0 := @parameter0: java.lang.String;
        $r1 = new java.util.StringTokenizer;
        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r0, "|");
        $r3 = staticinvoke <cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.Cell deserialize(java.util.StringTokenizer)>($r1);
        return $r3;
    }

    public static cz.romario.opensudoku.game.Cell deserialize(java.util.StringTokenizer)
    {
        java.util.StringTokenizer $r0;
        cz.romario.opensudoku.game.Cell $r1;
        java.lang.String $r2, $r4;
        int $i0;
        cz.romario.opensudoku.game.CellNote $r3;
        boolean $z0;
        java.lang.Boolean $r5;

        $r0 := @parameter0: java.util.StringTokenizer;
        $r1 = new cz.romario.opensudoku.game.Cell;
        specialinvoke $r1.<cz.romario.opensudoku.game.Cell: void <init>()>();
        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValue(int)>($i0);
        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r3 = staticinvoke <cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote deserialize(java.lang.String)>($r2);
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setNote(cz.romario.opensudoku.game.CellNote)>($r3);
        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("1");
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setEditable(java.lang.Boolean)>($r5);
        return $r1;
    }

    private void onChange()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r2 = $r0.<cz.romario.opensudoku.game.Cell: java.lang.Object mCellCollectionLock>;
        entermonitor $r2;

     label0:
        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellCollection mCellCollection>;
        if $r1 == null goto label1;

        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellCollection mCellCollection>;
        virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: void onChange()>();

     label1:
        exitmonitor $r2;
        return;

     label2:
        $r3 := @caughtexception;
        exitmonitor $r2;

     label3:
        throw $r3;

        catch java.lang.Throwable from label0 to label3 with label2;
    }

    public cz.romario.opensudoku.game.CellGroup getColumn()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellGroup $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mColumn>;
        return $r1;
    }

    public int getColumnIndex()
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 = $r0.<cz.romario.opensudoku.game.Cell: int mColumnIndex>;
        return $i0;
    }

    public cz.romario.opensudoku.game.CellNote getNote()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellNote $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote>;
        return $r1;
    }

    public cz.romario.opensudoku.game.CellGroup getRow()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellGroup $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mRow>;
        return $r1;
    }

    public int getRowIndex()
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 = $r0.<cz.romario.opensudoku.game.Cell: int mRowIndex>;
        return $i0;
    }

    public cz.romario.opensudoku.game.CellGroup getSector()
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellGroup $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mSector>;
        return $r1;
    }

    public int getValue()
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 = $r0.<cz.romario.opensudoku.game.Cell: int mValue>;
        return $i0;
    }

    protected void initCollection(cz.romario.opensudoku.game.CellCollection, int, int, cz.romario.opensudoku.game.CellGroup, cz.romario.opensudoku.game.CellGroup, cz.romario.opensudoku.game.CellGroup)
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        int $i0, $i1;
        cz.romario.opensudoku.game.CellGroup $r2, $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r6;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 := @parameter0: cz.romario.opensudoku.game.CellCollection;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 := @parameter3: cz.romario.opensudoku.game.CellGroup;
        $r3 := @parameter4: cz.romario.opensudoku.game.CellGroup;
        $r4 := @parameter5: cz.romario.opensudoku.game.CellGroup;
        $r6 = $r0.<cz.romario.opensudoku.game.Cell: java.lang.Object mCellCollectionLock>;
        entermonitor $r6;

     label0:
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellCollection mCellCollection> = $r1;
        exitmonitor $r6;

     label1:
        $r0.<cz.romario.opensudoku.game.Cell: int mRowIndex> = $i0;
        $r0.<cz.romario.opensudoku.game.Cell: int mColumnIndex> = $i1;
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mSector> = $r2;
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mRow> = $r3;
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellGroup mColumn> = $r4;
        virtualinvoke $r2.<cz.romario.opensudoku.game.CellGroup: void addCell(cz.romario.opensudoku.game.Cell)>($r0);
        virtualinvoke $r3.<cz.romario.opensudoku.game.CellGroup: void addCell(cz.romario.opensudoku.game.Cell)>($r0);
        virtualinvoke $r4.<cz.romario.opensudoku.game.CellGroup: void addCell(cz.romario.opensudoku.game.Cell)>($r0);
        return;

     label2:
        $r5 := @caughtexception;

     label3:
        exitmonitor $r6;

     label4:
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean isEditable()
    {
        cz.romario.opensudoku.game.Cell $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $z0 = $r0.<cz.romario.opensudoku.game.Cell: boolean mEditable>;
        return $z0;
    }

    public boolean isValid()
    {
        cz.romario.opensudoku.game.Cell $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $z0 = $r0.<cz.romario.opensudoku.game.Cell: boolean mValid>;
        return $z0;
    }

    public java.lang.String serialize()
    {
        cz.romario.opensudoku.game.Cell $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.Cell: void serialize(java.lang.StringBuilder)>($r1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public void serialize(java.lang.StringBuilder)
    {
        cz.romario.opensudoku.game.Cell $r0;
        java.lang.StringBuilder $r1, $r3;
        int $i0;
        java.lang.String $r2;
        cz.romario.opensudoku.game.CellNote $r4;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 := @parameter0: java.lang.StringBuilder;
        $i0 = $r0.<cz.romario.opensudoku.game.Cell: int mValue>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");
        $r4 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote>;
        if $r4 == null goto label0;

        $r4 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote>;
        $z0 = virtualinvoke $r4.<cz.romario.opensudoku.game.CellNote: boolean isEmpty()>();
        if $z0 == 0 goto label3;

     label0:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label1:
        $z0 = $r0.<cz.romario.opensudoku.game.Cell: boolean mEditable>;
        if $z0 == 0 goto label4;

        $r2 = "1";

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");
        return;

     label3:
        $r4 = $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote>;
        virtualinvoke $r4.<cz.romario.opensudoku.game.CellNote: void serialize(java.lang.StringBuilder)>($r1);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");
        goto label1;

     label4:
        $r2 = "0";
        goto label2;
    }

    public void setEditable(java.lang.Boolean)
    {
        cz.romario.opensudoku.game.Cell $r0;
        java.lang.Boolean $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 := @parameter0: java.lang.Boolean;
        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();
        $r0.<cz.romario.opensudoku.game.Cell: boolean mEditable> = $z0;
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void onChange()>();
        return;
    }

    public void setNote(cz.romario.opensudoku.game.CellNote)
    {
        cz.romario.opensudoku.game.Cell $r0;
        cz.romario.opensudoku.game.CellNote $r1;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 := @parameter0: cz.romario.opensudoku.game.CellNote;
        $r0.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote mNote> = $r1;
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void onChange()>();
        return;
    }

    public void setValid(java.lang.Boolean)
    {
        cz.romario.opensudoku.game.Cell $r0;
        java.lang.Boolean $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $r1 := @parameter0: java.lang.Boolean;
        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();
        $r0.<cz.romario.opensudoku.game.Cell: boolean mValid> = $z0;
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void onChange()>();
        return;
    }

    public void setValue(int)
    {
        cz.romario.opensudoku.game.Cell $r0;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter0: int;
        if $i0 < 0 goto label0;

        if $i0 <= 9 goto label1;

     label0:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be between 0-9.");
        throw $r2;

     label1:
        $r0.<cz.romario.opensudoku.game.Cell: int mValue> = $i0;
        specialinvoke $r0.<cz.romario.opensudoku.game.Cell: void onChange()>();
        return;
    }
}
