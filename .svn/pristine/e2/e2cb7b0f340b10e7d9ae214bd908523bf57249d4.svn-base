public class cz.romario.opensudoku.game.CellGroup extends java.lang.Object
{
    private cz.romario.opensudoku.game.Cell[] mCells;
    private int mPos;

    public void <init>()
    {
        cz.romario.opensudoku.game.CellGroup $r0;
        cz.romario.opensudoku.game.Cell[] $r1;

        $r0 := @this: cz.romario.opensudoku.game.CellGroup;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (cz.romario.opensudoku.game.Cell)[9];
        $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells> = $r1;
        $r0.<cz.romario.opensudoku.game.CellGroup: int mPos> = 0;
        return;
    }

    public void addCell(cz.romario.opensudoku.game.Cell)
    {
        cz.romario.opensudoku.game.CellGroup $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.Cell[] $r2;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.CellGroup;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $i0 = $r0.<cz.romario.opensudoku.game.CellGroup: int mPos>;
        $r2[$i0] = $r1;
        $i0 = $r0.<cz.romario.opensudoku.game.CellGroup: int mPos>;
        $i0 = $i0 + 1;
        $r0.<cz.romario.opensudoku.game.CellGroup: int mPos> = $i0;
        return;
    }

    public boolean contains(int)
    {
        cz.romario.opensudoku.game.CellGroup $r0;
        int $i0, $i1, $i2;
        cz.romario.opensudoku.game.Cell[] $r1;
        cz.romario.opensudoku.game.Cell $r2;

        $r0 := @this: cz.romario.opensudoku.game.CellGroup;
        $i0 := @parameter0: int;
        $i1 = 0;

     label0:
        $r1 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $i2 = lengthof $r1;
        if $i1 < $i2 goto label1;

        return 0;

     label1:
        $r1 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $r2 = $r1[$i1];
        $i2 = virtualinvoke $r2.<cz.romario.opensudoku.game.Cell: int getValue()>();
        if $i2 != $i0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;
        goto label0;
    }

    protected boolean validate()
    {
        cz.romario.opensudoku.game.CellGroup $r0;
        cz.romario.opensudoku.game.Cell $r1;
        java.util.HashMap $r2;
        int $i0, $i1;
        boolean $z0;
        cz.romario.opensudoku.game.Cell[] $r3;
        java.lang.Boolean $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        $r0 := @this: cz.romario.opensudoku.game.CellGroup;
        $z0 = 1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        $i0 = 0;

     label0:
        $r3 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $i1 = lengthof $r3;
        if $i0 < $i1 goto label1;

        return $z0;

     label1:
        $r3 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $r1 = $r3[$i0];
        $i1 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getValue()>();
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);
        if $r6 == null goto label3;

        $r3 = $r0.<cz.romario.opensudoku.game.CellGroup: cz.romario.opensudoku.game.Cell[] mCells>;
        $r1 = $r3[$i0];
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValid(java.lang.Boolean)>($r4);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);
        $r1 = (cz.romario.opensudoku.game.Cell) $r6;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValid(java.lang.Boolean)>($r4);
        $z0 = 0;

     label2:
        $i0 = $i0 + 1;
        goto label0;

     label3:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);
        goto label2;
    }
}
