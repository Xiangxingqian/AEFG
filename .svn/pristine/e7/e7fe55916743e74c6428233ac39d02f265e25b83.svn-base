package test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Main {
	
//	public void genTestCase(ActivityEventGraph aeg){
//		Logger log = LoggerFactory.getLogger(getClass());	
//		
//		String from = "SearchResults";
//		String to = "GroupEditActivity";
//		int deep = 3;
//		//List<ActivityEventEdge> ll = new ArrayList<ActivityEventEdge>();
//		List<List<Integer>> aees = aeg.getEdgesByName(from, to, deep);		
//		log.info(aees.size()+" "+aees.toString(),getClass());
//		List<List<Integer>> aee = aeg.getEdgesById(5, 8, 2);
//		log.info(aee.size()+" "+aee.toString(),getClass());	
//	}

	public static void main(String... a) throws Exception{
		Logger log = LoggerFactory.getLogger(Main.class);	
		String appName = "gmail";
		File file = new File("C:\\tmp\\"+appName+".txt");  
		FileInputStream fis;
		ObjectInputStream ois;	
		ActivityEventGraph aeg = null;					
		fis = new FileInputStream(file);				
		ois = new ObjectInputStream(fis);			
		aeg = (ActivityEventGraph) ois.readObject();  
		ois.close();  
		fis.close();  
			
//		List<List<String>> ssList = aeg.getStrEdges();	
//		Graph g = new Graph(ssList);
////		String from = "LabelSynchronizationActivity";
////		String to = "GmailPreferenceActivity";
////		List<List<Integer>> aees = g.getEdgesByName(from, to, 1);
////		for(List<Integer> li:aees){
////			for(int t:li){
////				System.out.println(t+" "+ssList.get(t)[3]);
////			}
////		}
//		FileOutputStream out = null;   
//		File file2 = new File("C:/tmp/Gmail.txt");
//		try{  
//			file2.createNewFile();  
//		}  
//		catch(IOException e){  
//			e.printStackTrace();  
//		}  
//		out = new FileOutputStream(file2);    
//        int count = ssList.size();
//        for (int i = 0; i < count; i++) {  
//        	List<String> strings = ssList.get(i);
//            out.write((i+" src: "+strings.get(0)+" tgt: "+strings.get(1)+" \n"+"invoker: "+strings.get(2)+"\n").getBytes() );   
//        }   
//        out.close();   
//
//       
//		List<String> strings = g.getNodes();
//		for(int i=0;i<strings.size();i++){
//			System.out.println(i+" "+strings.get(i));
//		}
//	
////		String from = "LauncherUI";
////		String to = "ExposeWithProofUI";
////		int deep = 1;
////		List<List<Integer>> aees = g.getEdgesByName(from, to, deep);
////		for(List<Integer> li:aees){
////			for(int t:li){
////				System.out.println(t+" "+ssList.get(t)[3]);
////			}
////		}
////			
////		log.info(aees.size()+" "+aees.toString(),Main.class);
//				
//		//List<String[]> sss = aeg.getStrEdges();
////		System.out.println(sss.size());
////		for(int i=0;i<sss.size();i++){
////			String[] strings = sss.get(i);
////			System.out.println(i+" "+strings[0]+" "+strings[1]);
////		}
	}
}
