public class cz.romario.opensudoku.gui.exporting.FileExportTask extends android.os.AsyncTask
{
    private android.content.Context mContext;
    private android.os.Handler mGuiHandler;
    private cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener mOnExportFinishedListener;

    public void <init>(android.content.Context)
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        android.content.Context $r1;
        android.os.Handler $r2;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: android.content.Context mContext> = $r1;
        $r2 = new android.os.Handler;
        specialinvoke $r2.<android.os.Handler: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: android.os.Handler mGuiHandler> = $r2;
        return;
    }

    static cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener access$1(cz.romario.opensudoku.gui.exporting.FileExportTask)
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener $r1;

        $r0 := @parameter0: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 = $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener mOnExportFinishedListener>;
        return $r1;
    }

    private void attribute(org.xmlpull.v1.XmlSerializer, java.lang.String, android.database.Cursor, java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r4;
        android.database.Cursor $r3;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;
        $r2 := @parameter1: java.lang.String;
        $r3 := @parameter2: android.database.Cursor;
        $r4 := @parameter3: java.lang.String;
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>($r4);
        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);
        if $r4 == null goto label0;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", $r2, $r4);

     label0:
        return;
    }

    private cz.romario.opensudoku.gui.exporting.FileExportTaskResult saveToFile(cz.romario.opensudoku.gui.exporting.FileExportTaskParams)
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        cz.romario.opensudoku.gui.exporting.FileExportTaskParams $r1;
        java.lang.Boolean $r3;
        java.lang.String $r4, $r22;
        long $l0, $l1, $l3;
        android.database.Cursor $r5, $r19;
        cz.romario.opensudoku.db.SudokuDatabase $r6, $r7;
        java.io.File $r8, $r16;
        java.io.IOException $r9, $r26, $r28, $r29;
        boolean $z0, $z1;
        cz.romario.opensudoku.gui.exporting.FileExportTaskResult $r10;
        org.xmlpull.v1.XmlSerializer $r11;
        java.io.BufferedWriter $r12, $r13;
        java.lang.Long $r14;
        byte $b2;
        java.lang.IllegalArgumentException $r15;
        android.content.Context $r18;
        java.io.FileWriter $r20;
        java.lang.Object[] $r24;
        float $f1;
        java.lang.Float $r25;
        int $i4;
        java.lang.Throwable $r27;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: cz.romario.opensudoku.gui.exporting.FileExportTaskParams;
        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long folderID>;
        if $r14 != null goto label0;

        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long sudokuID>;
        if $r14 != null goto label0;

        $r15 = new java.lang.IllegalArgumentException;
        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one of folderID and sudokuID must be set.");
        throw $r15;

     label0:
        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long folderID>;
        if $r14 == null goto label1;

        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long sudokuID>;
        if $r14 == null goto label1;

        $r15 = new java.lang.IllegalArgumentException;
        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one of folderID and sudokuID must be set.");
        throw $r15;

     label1:
        $r8 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.io.File file>;
        if $r8 != null goto label2;

        $r15 = new java.lang.IllegalArgumentException;
        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Filename must be set.");
        throw $r15;

     label2:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r10 = new cz.romario.opensudoku.gui.exporting.FileExportTaskResult;
        specialinvoke $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: void <init>()>();
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 0;
        $r6 = null;
        $r5 = null;
        $r12 = null;

     label3:
        $r8 = new java.io.File;
        $r16 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.io.File file>;

     label4:
        $r4 = virtualinvoke $r16.<java.io.File: java.lang.String getParent()>();
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r4);
        $z1 = virtualinvoke $r8.<java.io.File: boolean exists()>();
        if $z1 != 0 goto label5;

        virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

     label5:
        $r16 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.io.File file>;
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: java.io.File file> = $r16;
        $r7 = new cz.romario.opensudoku.db.SudokuDatabase;
        $r18 = $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: android.content.Context mContext>;
        specialinvoke $r7.<cz.romario.opensudoku.db.SudokuDatabase: void <init>(android.content.Context)>($r18);

     label6:
        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long folderID>;
        if $r14 == null goto label18;

        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long folderID>;

     label7:
        $l0 = virtualinvoke $r14.<java.lang.Long: long longValue()>();
        $r5 = virtualinvoke $r7.<cz.romario.opensudoku.db.SudokuDatabase: android.database.Cursor exportFolder(long)>($l0);
        $z0 = 1;

     label8:
        $r11 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();
        $r13 = new java.io.BufferedWriter;
        $r20 = new java.io.FileWriter;
        $r16 = $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: java.io.File file>;
        specialinvoke $r20.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r16, 0);
        specialinvoke $r13.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r20);

     label9:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>($r13);
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r3);
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "opensudoku");
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "version", "2");
        $l0 = -1L;

     label10:
        $z1 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();
        if $z1 != 0 goto label21;

        if $z0 == 0 goto label11;

        $b2 = $l0 cmp -1L;
        if $b2 == 0 goto label11;

        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "folder");

     label11:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "opensudoku");

     label12:
        if $r5 == null goto label13;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label13:
        if $r7 == null goto label14;

        virtualinvoke $r7.<cz.romario.opensudoku.db.SudokuDatabase: void close()>();

     label14:
        if $r13 == null goto label16;

     label15:
        virtualinvoke $r13.<java.io.Writer: void close()>();

     label16:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r24 = newarray (java.lang.Object)[1];
        $l3 = $l0 - $l1;
        $f1 = (float) $l3;
        $f1 = $f1 / 1000.0F;
        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);
        $r24[0] = $r25;
        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Exported in %f seconds.", $r24);
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("OpenSudoku", $r22);
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 1;

     label17:
        return $r10;

     label18:
        $r14 = $r1.<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: java.lang.Long sudokuID>;

     label19:
        $l3 = virtualinvoke $r14.<java.lang.Long: long longValue()>();
        $r19 = virtualinvoke $r7.<cz.romario.opensudoku.db.SudokuDatabase: android.database.Cursor exportFolder(long)>($l3);

     label20:
        $r5 = $r19;
        $z0 = 0;
        goto label8;

     label21:
        if $z0 == 0 goto label24;

     label22:
        $i4 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("folder_id");
        $l3 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>($i4);
        $b2 = $l0 cmp $l3;
        if $b2 == 0 goto label24;

        $b2 = $l0 cmp -1L;
        if $b2 == 0 goto label23;

        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "folder");

     label23:
        $i4 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("folder_id");
        $l0 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>($i4);
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "folder");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "name", $r5, "folder_name");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "created", $r5, "folder_created");

     label24:
        $i4 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("data");
        $r4 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i4);
        if $r4 == null goto label10;

        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "game");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "created", $r5, "created");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "state", $r5, "state");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "time", $r5, "time");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "last_played", $r5, "last_played");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "data", $r5, "data");
        specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: void attribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.database.Cursor,java.lang.String)>($r11, "note", $r5, "puzzle_note");
        interfaceinvoke $r11.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "game");

     label25:
        goto label10;

     label26:
        $r9 := @caughtexception;
        $r12 = $r13;
        $r6 = $r7;

     label27:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenSudoku", "Error while exporting file.", $r9);
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 0;

     label28:
        if $r5 == null goto label29;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label29:
        if $r6 == null goto label30;

        virtualinvoke $r6.<cz.romario.opensudoku.db.SudokuDatabase: void close()>();

     label30:
        if $r12 == null goto label17;

     label31:
        virtualinvoke $r12.<java.io.Writer: void close()>();

     label32:
        return $r10;

     label33:
        $r26 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenSudoku", "Error while exporting file.", $r26);
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 0;
        return $r10;

     label34:
        $r27 := @caughtexception;

     label35:
        if $r5 == null goto label36;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label36:
        if $r6 == null goto label37;

        virtualinvoke $r6.<cz.romario.opensudoku.db.SudokuDatabase: void close()>();

     label37:
        if $r12 == null goto label39;

     label38:
        virtualinvoke $r12.<java.io.Writer: void close()>();

     label39:
        throw $r27;

     label40:
        $r28 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenSudoku", "Error while exporting file.", $r28);
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 0;
        return $r10;

     label41:
        $r29 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenSudoku", "Error while exporting file.", $r29);
        $r10.<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: boolean successful> = 0;
        return $r10;

     label42:
        $r27 := @caughtexception;
        $r6 = $r7;
        goto label35;

     label43:
        $r27 := @caughtexception;
        $r12 = $r13;
        $r6 = $r7;
        goto label35;

     label44:
        $r9 := @caughtexception;
        goto label27;

     label45:
        $r9 := @caughtexception;
        $r6 = $r7;
        goto label27;

        catch java.io.IOException from label4 to label6 with label44;
        catch java.lang.Throwable from label3 to label6 with label34;
        catch java.io.IOException from label7 to label9 with label45;
        catch java.lang.Throwable from label6 to label9 with label42;
        catch java.io.IOException from label9 to label12 with label26;
        catch java.lang.Throwable from label9 to label12 with label43;
        catch java.io.IOException from label15 to label16 with label41;
        catch java.io.IOException from label19 to label20 with label45;
        catch java.lang.Throwable from label18 to label20 with label42;
        catch java.io.IOException from label22 to label25 with label26;
        catch java.lang.Throwable from label22 to label25 with label43;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.io.IOException from label38 to label39 with label40;
    }

    protected transient volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        java.lang.Object[] $r1;
        java.lang.Void $r2;
        cz.romario.opensudoku.gui.exporting.FileExportTaskParams[] $r3;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: java.lang.Object[];
        $r3 = (cz.romario.opensudoku.gui.exporting.FileExportTaskParams[]) $r1;
        $r2 = virtualinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: java.lang.Void doInBackground(cz.romario.opensudoku.gui.exporting.FileExportTaskParams[])>($r3);
        return $r2;
    }

    protected transient java.lang.Void doInBackground(cz.romario.opensudoku.gui.exporting.FileExportTaskParams[])
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        cz.romario.opensudoku.gui.exporting.FileExportTaskParams[] $r1;
        cz.romario.opensudoku.gui.exporting.FileExportTaskParams $r2;
        cz.romario.opensudoku.gui.exporting.FileExportTaskResult $r3;
        int $i0, $i1;
        android.os.Handler $r4;
        cz.romario.opensudoku.gui.exporting.FileExportTask$1 $r5;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: cz.romario.opensudoku.gui.exporting.FileExportTaskParams[];
        $i1 = lengthof $r1;
        $i0 = 0;

     label0:
        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r1[$i0];
        $r3 = specialinvoke $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: cz.romario.opensudoku.gui.exporting.FileExportTaskResult saveToFile(cz.romario.opensudoku.gui.exporting.FileExportTaskParams)>($r2);
        $r4 = $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: android.os.Handler mGuiHandler>;
        $r5 = new cz.romario.opensudoku.gui.exporting.FileExportTask$1;
        specialinvoke $r5.<cz.romario.opensudoku.gui.exporting.FileExportTask$1: void <init>(cz.romario.opensudoku.gui.exporting.FileExportTask,cz.romario.opensudoku.gui.exporting.FileExportTaskResult)>($r0, $r3);
        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);
        $i0 = $i0 + 1;
        goto label0;
    }

    public cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener getOnExportFinishedListener()
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener $r1;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 = $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener mOnExportFinishedListener>;
        return $r1;
    }

    public void setOnExportFinishedListener(cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener)
    {
        cz.romario.opensudoku.gui.exporting.FileExportTask $r0;
        cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener $r1;

        $r0 := @this: cz.romario.opensudoku.gui.exporting.FileExportTask;
        $r1 := @parameter0: cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener;
        $r0.<cz.romario.opensudoku.gui.exporting.FileExportTask: cz.romario.opensudoku.gui.exporting.FileExportTask$OnExportFinishedListener mOnExportFinishedListener> = $r1;
        return;
    }
}
