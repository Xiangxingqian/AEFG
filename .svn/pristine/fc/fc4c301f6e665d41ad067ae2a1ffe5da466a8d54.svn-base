public class cz.romario.opensudoku.game.CellNote extends java.lang.Object
{
    public static final cz.romario.opensudoku.game.CellNote EMPTY;
    private final java.util.Set mNotedNumbers;

    static void <clinit>()
    {
        cz.romario.opensudoku.game.CellNote $r0;

        $r0 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.CellNote: void <init>()>();
        <cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote EMPTY> = $r0;
        return;
    }

    public void <init>()
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.util.HashSet $r1;
        java.util.Set $r2;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashSet;
        specialinvoke $r1.<java.util.HashSet: void <init>()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);
        $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers> = $r2;
        return;
    }

    private void <init>(java.util.Set)
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.util.Set $r1;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r1 := @parameter0: java.util.Set;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);
        $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers> = $r1;
        return;
    }

    public static cz.romario.opensudoku.game.CellNote deserialize(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashSet $r1;
        java.util.StringTokenizer $r2;
        boolean $z0;
        cz.romario.opensudoku.game.CellNote $r4;
        int $i0;
        java.lang.Integer $r5;

        $r0 := @parameter0: java.lang.String;
        $r1 = new java.util.HashSet;
        specialinvoke $r1.<java.util.HashSet: void <init>()>();
        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label1;

        $r2 = new java.util.StringTokenizer;
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r0, ",");

     label0:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 != 0 goto label2;

     label1:
        $r4 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r4.<cz.romario.opensudoku.game.CellNote: void <init>(java.util.Set)>($r1);
        return $r4;

     label2:
        $r0 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("-");
        if $z0 != 0 goto label0;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);
        goto label0;
    }

    public static cz.romario.opensudoku.game.CellNote fromIntArray(java.lang.Integer[])
    {
        java.lang.Integer[] $r0;
        java.lang.Integer $r1;
        java.util.HashSet $r2;
        int $i0, $i1;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @parameter0: java.lang.Integer[];
        $r2 = new java.util.HashSet;
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        $i1 = lengthof $r0;
        $i0 = 0;

     label0:
        if $i0 < $i1 goto label1;

        $r3 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r3.<cz.romario.opensudoku.game.CellNote: void <init>(java.util.Set)>($r2);
        return $r3;

     label1:
        $r1 = $r0[$i0];
        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);
        $i0 = $i0 + 1;
        goto label0;
    }

    public cz.romario.opensudoku.game.CellNote addNumber(int)
    {
        cz.romario.opensudoku.game.CellNote $r0;
        int $i0;
        java.util.HashSet $r1;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Integer $r5;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $i0 := @parameter0: int;
        if $i0 < 1 goto label0;

        if $i0 <= 9 goto label1;

     label0:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number must be between 1-9.");
        throw $r4;

     label1:
        $r1 = new java.util.HashSet;
        $r3 = virtualinvoke $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set getNotedNumbers()>();
        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);
        $r0 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.CellNote: void <init>(java.util.Set)>($r1);
        return $r0;
    }

    public cz.romario.opensudoku.game.CellNote clear()
    {
        cz.romario.opensudoku.game.CellNote $r0;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r0 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.CellNote: void <init>()>();
        return $r0;
    }

    public java.util.Set getNotedNumbers()
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.util.Set $r1;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r1 = $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers>;
        return $r1;
    }

    public boolean isEmpty()
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.util.Set $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r1 = $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers>;
        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();
        if $i0 != 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public cz.romario.opensudoku.game.CellNote removeNumber(int)
    {
        cz.romario.opensudoku.game.CellNote $r0;
        int $i0;
        java.util.HashSet $r1;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Integer $r5;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $i0 := @parameter0: int;
        if $i0 < 1 goto label0;

        if $i0 <= 9 goto label1;

     label0:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number must be between 1-9.");
        throw $r4;

     label1:
        $r1 = new java.util.HashSet;
        $r3 = virtualinvoke $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set getNotedNumbers()>();
        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r5);
        $r0 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.CellNote: void <init>(java.util.Set)>($r1);
        return $r0;
    }

    public java.lang.String serialize()
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        virtualinvoke $r0.<cz.romario.opensudoku.game.CellNote: void serialize(java.lang.StringBuilder)>($r1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public void serialize(java.lang.StringBuilder)
    {
        cz.romario.opensudoku.game.CellNote $r0;
        java.lang.StringBuilder $r1, $r7;
        java.lang.Object $r2;
        java.util.Set $r3;
        boolean $z0;
        int $i0;
        java.util.Iterator $r5;
        java.lang.Integer $r6;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $r1 := @parameter0: java.lang.StringBuilder;
        $r3 = $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers>;
        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();
        if $i0 != 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

     label0:
        return;

     label1:
        $r3 = $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set mNotedNumbers>;
        $r5 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        $r2 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
        $r6 = (java.lang.Integer) $r2;
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        goto label2;
    }

    public cz.romario.opensudoku.game.CellNote toggleNumber(int)
    {
        cz.romario.opensudoku.game.CellNote $r0;
        int $i0;
        java.util.HashSet $r1;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Integer $r5;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.game.CellNote;
        $i0 := @parameter0: int;
        if $i0 < 1 goto label0;

        if $i0 <= 9 goto label1;

     label0:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number must be between 1-9.");
        throw $r4;

     label1:
        $r1 = new java.util.HashSet;
        $r3 = virtualinvoke $r0.<cz.romario.opensudoku.game.CellNote: java.util.Set getNotedNumbers()>();
        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r5);
        if $z0 == 0 goto label3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r5);

     label2:
        $r0 = new cz.romario.opensudoku.game.CellNote;
        specialinvoke $r0.<cz.romario.opensudoku.game.CellNote: void <init>(java.util.Set)>($r1);
        return $r0;

     label3:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);
        goto label2;
    }
}
