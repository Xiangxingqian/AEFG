public class cz.romario.opensudoku.gui.SudokuBoardView extends android.view.View
{
    public static final int DEFAULT_BOARD_SIZE;
    private static final int NO_COLOR;
    private boolean mAutoHideTouchedCellHint;
    private android.graphics.Paint mBackgroundColorReadOnly;
    private android.graphics.Paint mBackgroundColorSecondary;
    private android.graphics.Paint mBackgroundColorSelected;
    private android.graphics.Paint mBackgroundColorTouched;
    private float mCellHeight;
    private android.graphics.Paint mCellNotePaint;
    private android.graphics.Paint mCellValueInvalidPaint;
    private android.graphics.Paint mCellValuePaint;
    private android.graphics.Paint mCellValueReadonlyPaint;
    private float mCellWidth;
    private cz.romario.opensudoku.game.CellCollection mCells;
    private cz.romario.opensudoku.game.SudokuGame mGame;
    private boolean mHighlightTouchedCell;
    private boolean mHighlightWrongVals;
    private android.graphics.Paint mLinePaint;
    private float mNoteTop;
    private int mNumberLeft;
    private int mNumberTop;
    private cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener mOnCellSelectedListener;
    private cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener mOnCellTappedListener;
    private boolean mReadonly;
    private android.graphics.Paint mSectorLinePaint;
    private int mSectorLineWidth;
    private cz.romario.opensudoku.game.Cell mSelectedCell;
    private cz.romario.opensudoku.game.Cell mTouchedCell;

    public void <init>(android.content.Context)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.content.Context $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.content.res.TypedArray $r3;
        android.graphics.Paint $r4;
        int $i0, $i1, $i2;
        int[] $r5;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly> = 0;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightWrongVals> = 1;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightTouchedCell> = 1;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mAutoHideTouchedCellHint> = 1;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setFocusable(boolean)>(1);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setFocusableInTouchMode(boolean)>(1);
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mLinePaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mSectorLinePaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueInvalidPaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched> = $r4;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSelected> = $r4;
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueInvalidPaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueInvalidPaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-65536);
        $r5 = <cz.romario.opensudoku.R$styleable: int[] SudokuBoardView>;
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r5);
        $i0 = (int) 0;
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>($i0, -16777216);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setLineColor(int)>($i0);
        $i0 = (int) 1;
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>($i0, -16777216);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setSectorLineColor(int)>($i0);
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(2, -16777216);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setTextColor(int)>($i0);
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(3, -16777216);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setTextColorReadOnly(int)>($i0);
        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(4, -16777216);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setTextColorNote(int)>($i1);
        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(5, -1);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setBackgroundColor(int)>($i1);
        $i0 = (int) 0;
        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(6, $i0);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setBackgroundColorSecondary(int)>($i1);
        $i0 = (int) 0;
        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(7, $i0);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setBackgroundColorReadOnly(int)>($i1);
        $i2 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(50, 50, 255);
        $i2 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(8, $i2);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setBackgroundColorTouched(int)>($i2);
        $i2 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(9, -256);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setBackgroundColorSelected(int)>($i2);
        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();
        return;
    }

    private void computeSectorLineWidth(int, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        byte $b2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        if $i0 >= $i1 goto label2;

        $i1 = $i0;

     label0:
        $r1 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.content.Context getContext()>();
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();
        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r3.<android.util.DisplayMetrics: float density>;
        $f2 = (float) $i1;
        $f2 = $f2 / $f0;
        $f1 = 2.0F;
        $b2 = $f2 cmpl 150.0F;
        if $b2 <= 0 goto label1;

        $f1 = 3.0F;

     label1:
        $f3 = $f1 * $f0;
        $i1 = (int) $f3;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mSectorLineWidth> = $i1;
        return;

     label2:
        goto label0;
    }

    private cz.romario.opensudoku.game.Cell getCellAtPoint(int, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1, $i2;
        float $f0, $f1;
        cz.romario.opensudoku.game.CellCollection $r1;
        cz.romario.opensudoku.game.Cell $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingLeft()>();
        $i0 = $i0 - $i2;
        $i2 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingTop()>();
        $i1 = $i1 - $i2;
        $f1 = (float) $i1;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f1 = $f1 / $f0;
        $i2 = (int) $f1;
        $f1 = (float) $i0;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f1 = $f1 / $f0;
        $i1 = (int) $f1;
        if $i1 < 0 goto label0;

        if $i1 >= 9 goto label0;

        if $i2 < 0 goto label0;

        if $i2 >= 9 goto label0;

        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i2, $i1);
        return $r2;

     label0:
        return null;
    }

    private boolean moveCellSelection(int, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1, $i2, $i3;
        cz.romario.opensudoku.game.Cell $r1;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i3 = 0;
        $i2 = 0;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        if $r1 == null goto label0;

        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i3 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $i3 = $i3 + $i1;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i2 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getColumnIndex()>();
        $i2 = $i2 + $i0;

     label0:
        $z0 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelectionTo(int,int)>($i3, $i2);
        return $z0;
    }

    private boolean moveCellSelectionTo(int, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellCollection $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        if $i1 < 0 goto label0;

        if $i1 >= 9 goto label0;

        if $i0 < 0 goto label0;

        if $i0 >= 9 goto label0;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i0, $i1);
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell> = $r1;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void onCellSelected(cz.romario.opensudoku.game.Cell)>($r1);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return 1;

     label0:
        return 0;
    }

    private void setCellNote(cz.romario.opensudoku.game.Cell, cz.romario.opensudoku.game.CellNote)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.game.CellNote $r2;
        boolean $z0;
        cz.romario.opensudoku.game.SudokuGame $r3;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 := @parameter1: cz.romario.opensudoku.game.CellNote;
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z0 == 0 goto label0;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.SudokuGame mGame>;
        if $r3 == null goto label1;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.SudokuGame mGame>;
        virtualinvoke $r3.<cz.romario.opensudoku.game.SudokuGame: void setCellNote(cz.romario.opensudoku.game.Cell,cz.romario.opensudoku.game.CellNote)>($r1, $r2);

     label0:
        return;

     label1:
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setNote(cz.romario.opensudoku.game.CellNote)>($r2);
        goto label0;
    }

    private void setCellValue(cz.romario.opensudoku.game.Cell, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.Cell $r1;
        int $i0;
        boolean $z0;
        cz.romario.opensudoku.game.SudokuGame $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $i0 := @parameter1: int;
        $z0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z0 == 0 goto label0;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.SudokuGame mGame>;
        if $r2 == null goto label1;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.SudokuGame mGame>;
        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setCellValue(cz.romario.opensudoku.game.Cell,int)>($r1, $i0);

     label0:
        return;

     label1:
        virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: void setValue(int)>($i0);
        goto label0;
    }

    public boolean getAutoHideTouchedCellHint()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mAutoHideTouchedCellHint>;
        return $z0;
    }

    public int getBackgroundColorReadOnly()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getBackgroundColorSecondary()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getBackgroundColorSelected()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSelected>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getBackgroundColorTouched()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public cz.romario.opensudoku.game.CellCollection getCells()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.CellCollection $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        return $r1;
    }

    public boolean getHighlightTouchedCell()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightTouchedCell>;
        return $z0;
    }

    public boolean getHighlightWrongVals()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightWrongVals>;
        return $z0;
    }

    public int getLineColor()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mLinePaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getSectorLineColor()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mSectorLinePaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public cz.romario.opensudoku.game.Cell getSelectedCell()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.Cell $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        return $r1;
    }

    public int getTextColor()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getTextColorNote()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public int getTextColorReadOnly()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();
        return $i0;
    }

    public void hideTouchedCellHint()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell> = null;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return;
    }

    public boolean isReadOnly()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        return $z0;
    }

    public void moveCellSelectionRight()
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        boolean $z0;
        cz.romario.opensudoku.game.Cell $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelection(int,int)>(1, 0);
        if $z0 != 0 goto label0;

        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i0 = virtualinvoke $r1.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $i0 = $i0 + 1;
        $z0 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelectionTo(int,int)>($i0, 0);
        if $z0 != 0 goto label0;

        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelectionTo(int,int)>(0, 0);

     label0:
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return;
    }

    protected void onCellSelected(cz.romario.opensudoku.game.Cell)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener mOnCellSelectedListener>;
        if $r2 == null goto label0;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener mOnCellSelectedListener>;
        interfaceinvoke $r2.<cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener: void onCellSelected(cz.romario.opensudoku.game.Cell)>($r1);

     label0:
        return;
    }

    protected void onCellTapped(cz.romario.opensudoku.game.Cell)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.Cell $r1;
        cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.Cell;
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener mOnCellTappedListener>;
        if $r2 == null goto label0;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener mOnCellTappedListener>;
        interfaceinvoke $r2.<cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener: void onCellTapped(cz.romario.opensudoku.game.Cell)>($r1);

     label0:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Paint $r3;
        cz.romario.opensudoku.game.Cell $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.util.Set $r6;
        cz.romario.opensudoku.game.CellCollection $r8;
        java.lang.String $r9;
        cz.romario.opensudoku.game.CellNote $r10;
        java.util.Iterator $r11;
        java.lang.Integer $r12;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: android.graphics.Canvas;
        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);
        $i0 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getWidth()>();
        $i1 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingRight()>();
        $i6 = $i0 - $i1;
        $i5 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getHeight()>();
        $i4 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingBottom()>();
        $i2 = $i5 - $i4;
        $i3 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingLeft()>();
        $i4 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingTop()>();
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        $i5 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();
        if $i5 == 0 goto label0;

        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f0 = 3.0F * $f2;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 * 6.0F;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f1 = 3.0F * $f1;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f2, $f1, $r3);
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f3 = $f2 * 3.0F;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 * 3.0F;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f1 = 6.0F * $f0;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f3, $f2, $f1, $r3);
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f4 = 6.0F * $f3;
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f3 = $f2 * 3.0F;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 * 9.0F;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f1 = 6.0F * $f0;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f3, $f2, $f1, $r3);
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f4 = 3.0F * $f3;
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f3 = $f2 * 6.0F;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 * 6.0F;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f1 = 9.0F * $f0;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f3, $f2, $f1, $r3);

     label0:
        $r8 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        if $r8 == null goto label4;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly>;
        $i5 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();
        if $i5 == 0 goto label9;

        $z0 = 1;

     label1:
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        $f3 = virtualinvoke $r3.<android.graphics.Paint: float ascent()>();
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        $f0 = virtualinvoke $r3.<android.graphics.Paint: float ascent()>();
        $f4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f4 / 3.0F;
        $i5 = 0;

     label2:
        if $i5 < 9 goto label10;

        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        if $z0 != 0 goto label3;

        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        if $r4 == null goto label3;

        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i5 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: int getColumnIndex()>();
        $f4 = (float) $i5;
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f4 = $f4 * $f3;
        $i5 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $i1 = $i5 + $i3;
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i5 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $f4 = (float) $i5;
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f4 = $f4 * $f3;
        $i5 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $i0 = $i5 + $i4;
        $f4 = (float) $i1;
        $f3 = (float) $i0;
        $f2 = (float) $i1;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 + $f2;
        $f1 = (float) $i0;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f1 = $f1 + $f0;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSelected>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f3, $f2, $f1, $r3);

     label3:
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightTouchedCell>;
        if $z0 == 0 goto label4;

        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell>;
        if $r4 == null goto label4;

        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell>;
        $i5 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: int getColumnIndex()>();
        $f4 = (float) $i5;
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f4 = $f4 * $f3;
        $i5 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $i5 = $i5 + $i3;
        $r4 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell>;
        $i1 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: int getRowIndex()>();
        $f4 = (float) $i1;
        $f3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f4 = $f4 * $f3;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $i1 = $i1 + $i4;
        $f4 = (float) $i5;
        $f3 = (float) $i4;
        $f2 = (float) $i5;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f2 = $f1 + $f2;
        $f1 = (float) $i2;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f3, $f2, $f1, $r3);
        $f4 = (float) $i3;
        $f3 = (float) $i1;
        $f2 = (float) $i6;
        $f1 = (float) $i1;
        $f0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f1 = $f1 + $f0;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f3, $f2, $f1, $r3);

     label4:
        $i1 = 0;

     label5:
        if $i1 <= 9 goto label20;

        $i1 = 0;

     label6:
        if $i1 <= 9 goto label21;

        $i5 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mSectorLineWidth>;
        $i5 = $i5 / 2;
        $i1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mSectorLineWidth>;
        $i1 = $i1 % 2;
        $i1 = $i5 + $i1;
        $i0 = 0;

     label7:
        if $i0 <= 9 goto label22;

        $i2 = 0;

     label8:
        if $i2 <= 9 goto label23;

        return;

     label9:
        $z0 = 0;
        goto label1;

     label10:
        $i1 = 0;

     label11:
        if $i1 < 9 goto label12;

        $i5 = $i5 + 1;
        goto label2;

     label12:
        $r8 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        $r4 = virtualinvoke $r8.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>($i5, $i1);
        $f4 = (float) $i1;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f4 = $f4 * $f1;
        $f1 = (float) $i3;
        $f4 = $f4 + $f1;
        $i8 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $f4 = (float) $i5;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f4 = $f4 * $f1;
        $f1 = (float) $i4;
        $f4 = $f4 + $f1;
        $i9 = staticinvoke <java.lang.Math: int round(float)>($f4);
        $z1 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z1 != 0 goto label13;

        if $z0 == 0 goto label13;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly>;
        $i0 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();
        if $i0 == 0 goto label13;

        $f4 = (float) $i8;
        $f1 = (float) $i9;
        $f5 = (float) $i8;
        $f6 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f6 = $f6 + $f5;
        $f5 = (float) $i9;
        $f7 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f7 = $f5 + $f7;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f4, $f1, $f6, $f7, $r3);

     label13:
        $i0 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: int getValue()>();
        if $i0 == 0 goto label18;

        $z1 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: boolean isEditable()>();
        if $z1 == 0 goto label17;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;

     label14:
        $z1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightWrongVals>;
        if $z1 == 0 goto label15;

        $z1 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: boolean isValid()>();
        if $z1 != 0 goto label15;

        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueInvalidPaint>;

     label15:
        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        $i0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mNumberLeft>;
        $i8 = $i0 + $i8;
        $f7 = (float) $i8;
        $i8 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mNumberTop>;
        $i9 = $i8 + $i9;
        $f6 = (float) $i9;
        $f6 = $f6 - $f3;
        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r9, $f7, $f6, $r3);

     label16:
        $i1 = $i1 + 1;
        goto label11;

     label17:
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint>;
        goto label14;

     label18:
        $r10 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote getNote()>();
        $z1 = virtualinvoke $r10.<cz.romario.opensudoku.game.CellNote: boolean isEmpty()>();
        if $z1 != 0 goto label16;

        $r10 = virtualinvoke $r4.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote getNote()>();
        $r6 = virtualinvoke $r10.<cz.romario.opensudoku.game.CellNote: java.util.Set getNotedNumbers()>();
        $r11 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label16;

        $r5 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();
        $r12 = (java.lang.Integer) $r5;
        $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();
        $i0 = $i0 + -1;
        $i10 = $i0 % 3;
        $i11 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i11);
        $f7 = (float) $i8;
        $f6 = (float) $i10;
        $f6 = $f6 * $f2;
        $f7 = $f7 + $f6;
        $f7 = $f7 + 2.0F;
        $f6 = (float) $i9;
        $f1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mNoteTop>;
        $f6 = $f6 + $f1;
        $f6 = $f6 - $f0;
        $i11 = $i0 / 3;
        $f5 = (float) $i11;
        $f5 = $f5 * $f2;
        $f6 = $f6 + $f5;
        $f6 = $f6 - 1.0F;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r9, $f7, $f6, $r3);
        goto label19;

     label20:
        $f7 = (float) $i1;
        $f6 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f7 = $f7 * $f6;
        $f6 = (float) $i3;
        $f7 = $f7 + $f6;
        $f6 = (float) $i4;
        $f5 = (float) $i2;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mLinePaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f7, $f6, $f7, $f5, $r3);
        $i1 = $i1 + 1;
        goto label5;

     label21:
        $f7 = (float) $i1;
        $f6 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f7 = $f7 * $f6;
        $f6 = (float) $i4;
        $f7 = $f7 + $f6;
        $f6 = (float) $i3;
        $f5 = (float) $i6;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mLinePaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f6, $f7, $f5, $f7, $r3);
        $i1 = $i1 + 1;
        goto label6;

     label22:
        $f7 = (float) $i0;
        $f6 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $f7 = $f7 * $f6;
        $f6 = (float) $i3;
        $f7 = $f7 + $f6;
        $f6 = (float) $i5;
        $f6 = $f7 - $f6;
        $f5 = (float) $i4;
        $f4 = (float) $i1;
        $f1 = $f7 + $f4;
        $f0 = (float) $i2;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mSectorLinePaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f6, $f5, $f1, $f0, $r3);
        $i0 = $i0 + 3;
        goto label7;

     label23:
        $f7 = (float) $i2;
        $f6 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f7 = $f7 * $f6;
        $f6 = (float) $i4;
        $f7 = $f7 + $f6;
        $f6 = (float) $i3;
        $f5 = (float) $i5;
        $f5 = $f7 - $f5;
        $f4 = (float) $i6;
        $f3 = (float) $i1;
        $f7 = $f7 + $f3;
        $r3 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mSectorLinePaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f6, $f5, $f4, $f7, $r3);
        $i2 = $i2 + 3;
        goto label8;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        cz.romario.opensudoku.game.Cell $r2;
        boolean $z1;
        cz.romario.opensudoku.game.CellNote $r3;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 := @parameter1: android.view.KeyEvent;
        $z1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        if $z1 != 0 goto label12;

        lookupswitch($i0)
        {
            case 7: goto label7;
            case 19: goto label3;
            case 20: goto label5;
            case 21: goto label6;
            case 22: goto label4;
            case 23: goto label10;
            case 62: goto label7;
            case 67: goto label7;
            default: goto label0;
        };

     label0:
        if $i0 < 8 goto label12;

        if $i0 > 16 goto label12;

        $i0 = $i0 + -7;
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();
        if $z1 != 0 goto label1;

        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();
        if $z1 == 0 goto label11;

     label1:
        $r3 = virtualinvoke $r2.<cz.romario.opensudoku.game.Cell: cz.romario.opensudoku.game.CellNote getNote()>();
        $r3 = virtualinvoke $r3.<cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote toggleNumber(int)>($i0);
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setCellNote(cz.romario.opensudoku.game.Cell,cz.romario.opensudoku.game.CellNote)>($r2, $r3);

     label2:
        return 1;

     label3:
        $i1 = (int) 0;
        $z1 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelection(int,int)>($i1, -1);
        return $z1;

     label4:
        $i0 = (int) 0;
        $z1 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelection(int,int)>(1, $i0);
        return $z1;

     label5:
        $i0 = (int) 0;
        $z1 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelection(int,int)>($i0, 1);
        return $z1;

     label6:
        $i1 = (int) 0;
        $z1 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean moveCellSelection(int,int)>(-1, $i1);
        return $z1;

     label7:
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        if $r2 == null goto label2;

        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();
        if $z1 != 0 goto label8;

        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();
        if $z1 == 0 goto label9;

     label8:
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $r3 = <cz.romario.opensudoku.game.CellNote: cz.romario.opensudoku.game.CellNote EMPTY>;
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setCellNote(cz.romario.opensudoku.game.Cell,cz.romario.opensudoku.game.CellNote)>($r2, $r3);
        return 1;

     label9:
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        $i1 = (int) 0;
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setCellValue(cz.romario.opensudoku.game.Cell,int)>($r2, $i1);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void moveCellSelectionRight()>();
        return 1;

     label10:
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        if $r2 == null goto label2;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void onCellTapped(cz.romario.opensudoku.game.Cell)>($r2);
        return 1;

     label11:
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setCellValue(cz.romario.opensudoku.game.Cell,int)>($r2, $i0);
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void moveCellSelectionRight()>();
        return 1;

     label12:
        return 0;
    }

    protected void onMeasure(int, int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f2;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);
        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);
        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);
        if $i4 != 1073741824 goto label6;

        $i3 = $i5;

     label0:
        if $i0 != 1073741824 goto label7;

        $i1 = $i2;

     label1:
        if $i4 == 1073741824 goto label2;

        $i3 = $i1;

     label2:
        if $i0 == 1073741824 goto label3;

        $i1 = $i3;

     label3:
        if $i4 != -2147483648 goto label4;

        if $i3 <= $i5 goto label4;

        $i3 = $i5;

     label4:
        if $i0 != -2147483648 goto label5;

        if $i1 <= $i2 goto label5;

        $i1 = $i2;

     label5:
        $i7 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingLeft()>();
        $i7 = $i3 - $i7;
        $i6 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingRight()>();
        $i7 = $i7 - $i6;
        $f2 = (float) $i7;
        $f2 = $f2 / 9.0F;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth> = $f2;
        $i7 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingTop()>();
        $i7 = $i1 - $i7;
        $i6 = virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int getPaddingBottom()>();
        $i7 = $i7 - $i6;
        $f2 = (float) $i7;
        $f2 = $f2 / 9.0F;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight> = $f2;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setMeasuredDimension(int,int)>($i3, $i1);
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f0 = $f2 * 0.75F;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueInvalidPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f2 = $f2 / 3.0F;
        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f2);
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellWidth>;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        $f0 = virtualinvoke $r1.<android.graphics.Paint: float measureText(java.lang.String)>("9");
        $f2 = $f2 - $f0;
        $f2 = $f2 / 2.0F;
        $i7 = (int) $f2;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mNumberLeft> = $i7;
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getTextSize()>();
        $f2 = $f2 - $f0;
        $f2 = $f2 / 2.0F;
        $i7 = (int) $f2;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: int mNumberTop> = $i7;
        $f2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mCellHeight>;
        $f2 = $f2 / 50.0F;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: float mNoteTop> = $f2;
        specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void computeSectorLineWidth(int,int)>($i3, $i1);
        return;

     label6:
        $i3 = 100;
        if $i4 != -2147483648 goto label0;

        if 100 <= $i5 goto label0;

        $i3 = $i5;
        goto label0;

     label7:
        $i1 = 100;
        if $i0 != -2147483648 goto label1;

        if 100 <= $i2 goto label1;

        $i1 = $i2;
        goto label1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        float $f0;
        cz.romario.opensudoku.game.Cell $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: android.view.MotionEvent;
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        if $z0 != 0 goto label1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $i0 = (int) $f0;
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i1 = (int) $f0;
        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        lookupswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label0;
        };

     label0:
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();

     label1:
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        if $z0 == 0 goto label6;

        return 0;

     label2:
        $r2 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell getCellAtPoint(int,int)>($i0, $i1);
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell> = $r2;
        goto label0;

     label3:
        $r2 = specialinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell getCellAtPoint(int,int)>($i0, $i1);
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell> = $r2;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void invalidate()>();
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        if $r2 == null goto label4;

        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void onCellTapped(cz.romario.opensudoku.game.Cell)>($r2);
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void onCellSelected(cz.romario.opensudoku.game.Cell)>($r2);

     label4:
        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mAutoHideTouchedCellHint>;
        if $z0 == 0 goto label0;

        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell> = null;
        goto label0;

     label5:
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mTouchedCell> = null;
        goto label0;

     label6:
        return 1;
    }

    public void setAutoHideTouchedCellHint(boolean)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 := @parameter0: boolean;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mAutoHideTouchedCellHint> = $z0;
        return;
    }

    public void setBackgroundColorReadOnly(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorReadOnly>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setBackgroundColorSecondary(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSecondary>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setBackgroundColorSelected(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSelected>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorSelected>;
        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(100);
        return;
    }

    public void setBackgroundColorTouched(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mBackgroundColorTouched>;
        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(100);
        return;
    }

    public void setCells(cz.romario.opensudoku.game.CellCollection)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.CellCollection $r1;
        cz.romario.opensudoku.game.Cell $r2;
        boolean $z0;
        cz.romario.opensudoku.gui.SudokuBoardView$1 $r3;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.CellCollection;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells> = $r1;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        if $r1 == null goto label1;

        $z0 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly>;
        if $z0 != 0 goto label0;

        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.Cell getCell(int,int)>(0, 0);
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell> = $r2;
        $r2 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.Cell mSelectedCell>;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void onCellSelected(cz.romario.opensudoku.game.Cell)>($r2);

     label0:
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.CellCollection mCells>;
        $r3 = new cz.romario.opensudoku.gui.SudokuBoardView$1;
        specialinvoke $r3.<cz.romario.opensudoku.gui.SudokuBoardView$1: void <init>(cz.romario.opensudoku.gui.SudokuBoardView)>($r0);
        virtualinvoke $r1.<cz.romario.opensudoku.game.CellCollection: void addOnChangeListener(cz.romario.opensudoku.game.CellCollection$OnChangeListener)>($r3);

     label1:
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return;
    }

    public void setGame(cz.romario.opensudoku.game.SudokuGame)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.game.SudokuGame $r1;
        cz.romario.opensudoku.game.CellCollection $r2;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.game.SudokuGame;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.game.SudokuGame mGame> = $r1;
        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection getCells()>();
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void setCells(cz.romario.opensudoku.game.CellCollection)>($r2);
        return;
    }

    public void setHighlightTouchedCell(boolean)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 := @parameter0: boolean;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightTouchedCell> = $z0;
        return;
    }

    public void setHighlightWrongVals(boolean)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 := @parameter0: boolean;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mHighlightWrongVals> = $z0;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return;
    }

    public void setLineColor(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mLinePaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setOnCellSelectedListener(cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellSelectedListener mOnCellSelectedListener> = $r1;
        return;
    }

    public void setOnCellTappedListener(cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $r1 := @parameter0: cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: cz.romario.opensudoku.gui.SudokuBoardView$OnCellTappedListener mOnCellTappedListener> = $r1;
        return;
    }

    public void setReadOnly(boolean)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        boolean $z0;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $z0 := @parameter0: boolean;
        $r0.<cz.romario.opensudoku.gui.SudokuBoardView: boolean mReadonly> = $z0;
        virtualinvoke $r0.<cz.romario.opensudoku.gui.SudokuBoardView: void postInvalidate()>();
        return;
    }

    public void setSectorLineColor(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mSectorLinePaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setTextColor(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValuePaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setTextColorNote(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellNotePaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }

    public void setTextColorReadOnly(int)
    {
        cz.romario.opensudoku.gui.SudokuBoardView $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuBoardView;
        $i0 := @parameter0: int;
        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuBoardView: android.graphics.Paint mCellValueReadonlyPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);
        return;
    }
}
