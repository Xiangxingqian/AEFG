package com.app.test.modifyClass;

import com.app.test.MethodBuilder;
import com.app.test.newClass.ClassBuildingInterface;

import soot.RefType;
import soot.SootClass;
import soot.SootField;
import soot.SootMethod;
import soot.Type;

public abstract class ClassModifier implements ClassBuildingInterface{
	
	SootClass sc;

	public ClassModifier(SootClass sc) {
		super();
		this.sc = sc;
	}
	
	public void modify(){
		if(sc.hasTag("Modified")){
			return;
		}
		addInterface();
		addFields();
		addMethods();
		sc.addTag(new ModifiedTag());
	}
	
	public SootField addField(String fieldName,RefType type){
		SootField sootField = new SootField(fieldName, type);
		sc.addField(sootField);
		return sootField;
	}
	
	public SootField addField(String name, Type type, int modifiers){
		SootField sootField = new SootField(name, type,modifiers);
		sc.addField(sootField);
		return sootField;
	}
	
	public SootMethod addMethod(MethodBuilder mb){
		return mb.newMethod();
	}

}
